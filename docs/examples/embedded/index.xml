<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>XploR Studio â€“ Baremetal</title><link>/docs/examples/embedded/</link><description>Recent content in Baremetal on XploR Studio</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 13 Oct 2020 15:21:01 +0200</lastBuildDate><atom:link href="/docs/examples/embedded/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: GNU C/C++ HelloWorld</title><link>/docs/examples/embedded/riscvhelloworld/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>/docs/examples/embedded/riscvhelloworld/</guid><description>
&lt;h1 id="risc-v-hello-world-embedded-project">RISC-V Hello World Embedded Project&lt;/h1>
&lt;p>This chapter covers the basics of C/C++ embedded RISC-V projects including creating, building, running, and debugging embedded RISC-V applications. The project referred to in this chapter is called &amp;ldquo;RISC-V Hello World.&amp;rdquo; This application prints &amp;ldquo;Hello World&amp;rdquo; text and runs a simple for-loop as a simple demonstration. The application can also be built and run on QEMU emulator.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong>
To build, run and debug Embedded applications with QEMU emulator, please install the &lt;strong>xplor-studio-elf&lt;/strong> blueprint first. Please refer to &lt;a href="../../../blueprints/guideline/">&lt;span style="color: blue">Blueprint Guideline&lt;/span>&lt;/a> for more information.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="/images_embedded/RISCVHelloworld/1-1.png" alt="example image">&lt;/p>
&lt;h2 id="create-a-new-project">Create a new project&lt;/h2>
&lt;p>Select &lt;strong>File &amp;gt; New &amp;gt; C Project&lt;/strong> choose &lt;strong>RISC-V Embedded Project &amp;gt; RISC-V Helloworld&lt;/strong> project and &lt;strong>Toolchains&lt;/strong>: &lt;em>Baremetal XploR Toolchain for RISC-V&lt;/em> then click &lt;strong>Next&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="/images_embedded/RISCVHelloworld/1.png" alt="example image">&lt;/p>
&lt;p>In the next screens, the user can specify project options such as Author, copyright notice, project description, compiler, assembler, linker, and run/debug options. Then click the Next button.&lt;/p>
&lt;p>&lt;img src="/images_embedded/RISCVHelloworld/2.png" alt="example image">&lt;/p>
&lt;p>Then click Next to select Vendor Information. From the list, User can select one platform and one core to run/debug.&lt;/p>
&lt;!--
![example image](/images_embedded/RISCVHelloworld/3.png)
![example image](/images_embedded/RISCVHelloworld/4.png)
-->
&lt;p>&lt;img src="/images_embedded/RISCVHelloworld/5.png" alt="example image">&lt;/p>
&lt;p>Then click &lt;strong>Finish&lt;/strong>.&lt;/p>
&lt;h2 id="update-build-settings">Update build settings&lt;/h2>
&lt;p>The build setting is the same as the quick-start project&amp;rsquo;s settings. Please refer to &lt;a href="../../../getting-started/quick-start/freertos#update-build-settings">&lt;span style="color: blue">Update build settings&lt;/span>&lt;/a> for more information.&lt;/p>
&lt;h2 id="build-project">Build project&lt;/h2>
&lt;p>The build step is the same as the quick-start project&amp;rsquo;s step. Please refer to &lt;a href="../../../getting-started/quick-start/freertos#build-project">&lt;span style="color: blue">Build project&lt;/span>&lt;/a> for more information.&lt;/p>
&lt;h2 id="running-and-debugging-project-with-qemu-emulator">Running and Debugging project with QEMU emulator&lt;/h2>
&lt;p>The running and debugging step is the same as the quick-start project&amp;rsquo;s step. Please refer to &lt;a href="../../../getting-started/quick-start/freertos#blinky-debug-qemu">&lt;span style="color: blue">Running and Debugging project with QEMU emulator&lt;/span>&lt;/a> for more information.&lt;/p>
&lt;!-- ## &lt;a id="debug-imperas">&lt;span style="color: black">5. Running and Debugging project with Imperas emulator&lt;/span> &lt;/a>
!!!warning "Note"
Before running the HelloworldDemo with Imperas, please update the build setting to "Architecture: RV64I, IntegerABI: LP64". Because Imperas only supports 64-bit samples currently.
![example image](/images_embedded/RISCVHelloworld/28.png)
### Run project on Imperas emulator
Right-click on current project > **Run As > RISV-C application with Imperas**.
![example image](/images_embedded/RISCVHelloworld/29.png)
The output of the application is shown in the Console view:
![example image](/images_embedded/RISCVHelloworld/30.png)
### Debug project on Imperas Emulator
**There are three ways to start debugging the application:**
1. Select the HelloworldDemo entry in the Project Explorer then open the **Debug Configurations** Dialog. Doing so will enable XploR Studio to automatically fill out the necessary debug configuration information.
![example image](/images_embedded/RISCVHelloworld/31.png)
In the **Debug Configurations** Dialog, create a new one by double clicking on **RISC-V Debugging**:
![example image](/images_embedded/RISCVHelloworld/32.png)
On the tab **Debugger**, choose option **Imperas in Virtual Platforms**. Click **Apply** then click **Debug**.
![example image](/images_embedded/RISCVHelloworld/33.png)
2. Select the **HelloworldDemo** in the **Toolbar**, then click **Debug As RISC-V application with Imperas**.
![example image](/images_embedded/RISCVHelloworld/34.png)
3. Right-click on the current project in the **Project Explorer > Debug As > RISV-C application with Imperas.**
![example image](/images_embedded/RISCVHelloworld/35.png)
After selecting Debug As and RISC-V application with Imperas, the XploR Studio UI changes to debug perspective and automatically sets a breakpoint in the first line of code in main() function.
Refer to [Running and Debugging project with QEMU emulator](../../../getting-started/quick-start/freertos#blinky-debug-qemu) for more information about examining applications and perform functions such as adding new breakpoints, viewing and changing variable values, checking the register values, and so on.
## Running and Debugging project with Intel FPGA DE2-115 platform
The running and debugging with Intel FPGA DE2-115 platform is the same as the quick-start project. Please refer to [Running and Debugging project with Intel FPGA DE2-115 platform](../../../getting-started/quick-start/freertos#blinky-debug-de2) for more information.
## Running and Debugging project with Intel FPGA Stratix 10 GX platform
The running and debugging with Intel FPGA Stratix 10 GX platform is the same as the quick-start project. Please refer to [Running and Debugging project with Intel FPGA Stratix 10 GX platform](../../../getting-started/quick-start/freertos#blinky-debug-stratix) for more information. --></description></item><item><title>Docs: LLVM C/C++ HelloWorld</title><link>/docs/examples/embedded/llvmhelloworld/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>/docs/examples/embedded/llvmhelloworld/</guid><description>
&lt;h1 id="llvm-hello-world-embedded-project">LLVM Hello World Embedded Project&lt;/h1>
&lt;p>This chapter covers the basics of C/C++ embedded RISC-V projects including creating, building, running, and debugging embedded RISC-V applications. The project referred to in this chapter is called &amp;ldquo;LLVM Hello World.&amp;rdquo; This application prints &amp;ldquo;Hello World&amp;rdquo; text and runs a simple for-loop as a simple demonstration. The application can also be built with LLVM toolchain and run on QEMU emulator.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong>
To build, run and debug Embedded applications with QEMU emulator, please install the &lt;strong>xplor-studio-elf&lt;/strong> blueprint first. Please refer to &lt;a href="../../../blueprints/guideline/">&lt;span style="color: blue">Blueprint Guideline&lt;/span>&lt;/a> for more information.&lt;/p>
&lt;/blockquote>
&lt;h2 id="create-a-new-project">Create a new project&lt;/h2>
&lt;p>To create &lt;em>LLVM Hello World Embedded Project&lt;/em>, select &lt;strong>File &amp;gt; New &amp;gt; C Project&lt;/strong> choose &lt;strong>RISC-V Embedded Project &amp;gt; RISC-V LLVM Sample&lt;/strong> project and &lt;strong>Toolchains&lt;/strong>: &lt;em>LLVM Baremetal Toolchain for RISC-V&lt;/em>.&lt;/p>
&lt;p>&lt;img src="/images_embedded/LLVMHelloworld/1.png" alt="example image">&lt;/p>
&lt;p>As the image above, there is no option as &lt;em>LLVM Baremetal Toolchain for RISC-V&lt;/em> because this XploR Studio does not contain LLVM toolchain.&lt;/p>
&lt;p>To use this toolchain, please install &lt;strong>xplor-clang&lt;/strong> blueprint (refer to &lt;a href="../../../blueprints/guideline">&lt;span style="color: blue">Blueprint Guideline&lt;/span>&lt;/a> for more information).&lt;/p>
&lt;p>After installation and restart the IDE, you can see the creating-project widget like:&lt;/p>
&lt;p>&lt;img src="/images_embedded/LLVMHelloworld/1-1.png" alt="example image">&lt;/p>
&lt;p>Please refer to &lt;a href="../../../getting-started/quick-start/freertos#create-project">&lt;span style="color: blue">Create a new project&lt;/span>&lt;/a> for more information on other steps.&lt;/p>
&lt;h2 id="update-build-settings">Update build settings&lt;/h2>
&lt;p>The build setting is the same as the quick-start project&amp;rsquo;s settings. Please refer to &lt;a href="../../../getting-started/quick-start/freertos#update-build-settings">&lt;span style="color: blue">Update build settings&lt;/span>&lt;/a> for more information.&lt;/p>
&lt;h2 id="build-project">Build project&lt;/h2>
&lt;p>The build step is the same as the quick-start project&amp;rsquo;s step. Please refer to &lt;a href="../../../getting-started/quick-start/freertos#build-project">&lt;span style="color: blue">Build project&lt;/span>&lt;/a> for more information.&lt;/p>
&lt;h2 id="running-and-debugging-project-with-qemu-emulator">Running and Debugging project with QEMU emulator&lt;/h2>
&lt;p>The running and debugging step is the same as the quick-start project&amp;rsquo;s step. Please refer to &lt;a href="../../../getting-started/quick-start/freertos#blinky-debug-qemu">&lt;span style="color: blue">Running and Debugging project with QEMU emulator&lt;/span>&lt;/a> for more information.&lt;/p>
&lt;!-- ## Running and Debugging project with Imperas emulator
The running and debugging with Imperas emulator is the same as the **RISC-V Hello World Embedded Application**. Please refer to [Running and Debugging project with Imperas emulator](../../../examples/embedded/RISCVHelloworld#debug-imperas)
## Running and Debugging project with Intel FPGA DE2-115 platform
The running and debugging with Intel FPGA DE2-115 platform is the same as the quick-start project. Please refer to [Running and Debugging project with Intel FPGA DE2-115 platform](../../../getting-started/quick-start/freertos#blinky-debug-de2) for more information.
## Running and Debugging project with Intel FPGA Stratix 10 GX platform
The running and debugging with Intel FPGA Stratix 10 GX platform is the same as the quick-start project. Please refer to [Running and Debugging project with Intel FPGA Stratix 10 GX platform](../../../getting-started/quick-start/freertos#blinky-debug-stratix) for more information. --></description></item></channel></rss>