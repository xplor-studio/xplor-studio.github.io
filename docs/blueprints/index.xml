<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>XploR Studio – Blueprints</title><link>/docs/blueprints/</link><description>Recent content in Blueprints on XploR Studio</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 06 Oct 2020 08:49:15 +0000</lastBuildDate><atom:link href="/docs/blueprints/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Introduction</title><link>/docs/blueprints/about/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>/docs/blueprints/about/</guid><description>
&lt;p>Blueprints are packages of hardware and/or software IP(s) that extend XploR Studio with custom features and behaviors for specific &lt;a href="/docs/concepts/execution-environment/">&lt;em>execution platform(s)&lt;/em>&lt;/a>.&lt;/p>
&lt;p>The &lt;a href="https://xplor.design/">Blueprint Catalog&lt;/a> is a collection of free and paid blueprints from SoC.one, community contributors, and commercial vendors.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong>
You can peruse the &lt;a href="https://xplor.design/">Blueprint Catalog&lt;/a> from the XploR Studio Dashboard via the &lt;code>Blueprints&lt;/code> menu entry, or with &lt;strong>xip&lt;/strong>.&lt;/p>
&lt;/blockquote>
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">mainframe XploR blueprints
state &amp;#34;xplor.design - blueprint registry&amp;#34; as registry {
state &amp;#34;Free blueprints&amp;#34;
state &amp;#34;Paid blueprints&amp;#34;
}
state &amp;#34;Contributors&amp;#34; as contributors {
state &amp;#34;SoC.one&amp;#34; as socone
state &amp;#34;Open source developers&amp;#34; as developers
state &amp;#34;Third-parties vendors&amp;#34; as vendors
}
socone --&amp;gt; registry : contributes
developers -up-&amp;gt; registry : contribute
vendors --&amp;gt; registry : contribute
state &amp;#34;XploR Studio&amp;#34; as IDE
state &amp;#34;Target Platform&amp;#34; as target
IDE : User downloads and installs
IDE : blueprints from XploR.design
IDE : on the host system.
IDE :
IDE : XploR studio deploys blueprints
IDE : on target platform
registry -&amp;gt; IDE : download &amp;amp;\ninstall
IDE --&amp;gt; target
&lt;/code>&lt;/pre>&lt;h3 id="creating-and-contributing-blueprints">Creating and contributing blueprints&lt;/h3>
&lt;p>Developer can create and contribute blueprints to XploR Design blueprint catalog. Once downloaded and installed, contributed blueprints are loaded dynamically XploR Studio.&lt;/p>
&lt;p>The experience of implementing an XploR Design blueprint is comparable to that of writing a web browser extension. To learn more about XploR blueprint creation, please refer to the &lt;a href="../package">&lt;span style="color: blue">Packaging blueprints&lt;/span>&lt;/a> documentation.&lt;/p></description></item><item><title>Docs: Guidelines</title><link>/docs/blueprints/guideline/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>/docs/blueprints/guideline/</guid><description>
&lt;p>After successful &lt;a href="../../getting-started/installation/install">&lt;span style="color: blue">installation&lt;/span>&lt;/a>, the baseline IDE does not contain any resources like toolchains, example programs, and target bitfiles.&lt;/p>
&lt;p>To use example projects such as &lt;em>Embedded Baremetal&lt;/em>, &lt;em>Embedded Linux&lt;/em> or &lt;em>LLVM examples&lt;/em>, it is necessary to download and install the respective blueprints.&lt;/p>
&lt;p>Select the icon &lt;img src="/blueprints/1.png" alt="Image alt"> in the toolbar to show a list of available blueprints:&lt;/p>
&lt;p>&lt;img src="/blueprints/2.png" alt="example image">&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>There are two instances of blueprints: &lt;strong>Stable&lt;/strong> for normal usage and &lt;strong>Development&lt;/strong> for development.&lt;/li>
&lt;li>The &lt;strong>Current Version&lt;/strong> and &lt;strong>Available Version&lt;/strong> columns show the current installed version and the newest available version from XploR Design.&lt;/li>
&lt;li>The &lt;strong>Status&lt;/strong> column indicates whether a blueprint is installed.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>To install the desired blueprint, check the box in the &lt;em>No.&lt;/em> column and select &lt;strong>Install&lt;/strong>. One or more blueprints can be installed at the same time.&lt;/p>
&lt;p>&lt;img src="/blueprints/3.png" alt="example image">&lt;/p>
&lt;p>If a blueprint has multiple available versions, you can select a specific version of that blueprint by simply double-clicking on it. A new dialog will be shown to display all available versions:&lt;/p>
&lt;p>&lt;img src="/blueprints/3.1.png" alt="example image">&lt;/p>
&lt;p>The &lt;em>Status&lt;/em> column shows whether the blueprint is installed locally. User can uninstall a blueprint by checking the box in the &lt;em>No.&lt;/em> column and selecting &lt;strong>Uninstall&lt;/strong>. Similar to installing feature, one or more blueprints can be uninstalled at the same time.&lt;/p>
&lt;p>&lt;img src="/blueprints/3-2.png" alt="example image">&lt;/p>
&lt;p>&lt;img src="/blueprints/3-3.png" alt="example image">&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note:&lt;/h4>
&lt;p>If you do not wish to install the dependencies of specific blueprints, please select the checkbox labeled &lt;strong>Don&amp;rsquo;t install Blueprint&amp;rsquo;s dependencies&lt;/strong> below the blueprints list.&lt;/p>
&lt;p>&lt;img src="/blueprints/2-1.png" alt="example image">&lt;/p>
&lt;/div></description></item><item><title>Docs: Packaging blueprint</title><link>/docs/blueprints/package/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>/docs/blueprints/package/</guid><description>
&lt;blockquote>
&lt;p>&lt;strong>WARNING&lt;/strong>
The following guide is preliminary and subjected to changes.&lt;/p>
&lt;/blockquote>
&lt;h2 id="prerequisite">Prerequisite&lt;/h2>
&lt;p>The following software components on the host computer are required:&lt;/p>
&lt;ul>
&lt;li>python==3.8.10&lt;/li>
&lt;li>setuptools (newest version)&lt;/li>
&lt;/ul>
&lt;h2 id="template">Template&lt;/h2>
&lt;p>Download and extract the blueprint template from &lt;a href="https://github.com/xplor-studio/xip/blob/blueprint-template/empty-blueprint-templates.zip">here&lt;/a>.&lt;/p>
&lt;p>Note that blueprint name should be in lowercases. If multiple words are used, they should be separated by underscores &lt;code>_&lt;/code> or &lt;code>-&lt;/code>. Avoid using spaces or special characters or mixing &lt;code>_&lt;/code> and &lt;code>-&lt;/code> in the package name.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Examples:&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code> Correct name : `blueprint-one`, `blueprint_two`
Wrong name : `blueprint_with-wrong_name`
&lt;/code>&lt;/pre>&lt;/blockquote>
&lt;h3 id="structure-of-blueprint-templates">Structure of blueprint templates&lt;/h3>
&lt;p>In the example blueprint template, there are 2 folders (&lt;strong>blueprint-one/&lt;/strong>, &lt;strong>blueprint-two/&lt;/strong>) containing blueprint templates and a &lt;em>Makefile&lt;/em> that supports building and publishing blueprints.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── blueprint-one
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── blueprint-one
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── Readme.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── MANIFEST.in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── setup.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── blueprint-two
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── blueprint-two
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── linux.x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ │ └── env
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── win32.x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── env
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── MANIFEST.in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── setup.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── Makefile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The standard structure of a blueprint template includes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>A data folder (blueprint-one/blueprint-one, blueprint-two/blueprint-two)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>MANIFEST.in&lt;/strong> (used for including non-Python data to package/blueprint)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>setup.py&lt;/strong> (used for building a blueprint)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Two different data scenarios for blueprint are supported:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The data of the blueprint are host-independent, and can be used in both Windows and Linux OS (&lt;strong>blueprint-one&lt;/strong>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The data of the blueprint are host-dependent, requiring a different version for each supported host (&lt;strong>blueprint-two&lt;/strong>)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>Limitation&lt;/strong>: blueprints that have a mix of both common and specific data for different supported host are not yet supported.&lt;/p>
&lt;/blockquote>
&lt;h2 id="setuppy">setup.py&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;code>blueprint-one/setup.py&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">from&lt;/span> &lt;span style="color:#000">setuptools&lt;/span> &lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">setup&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">package_dir&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;blueprint-one&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;blueprint-one&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">setup&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;blueprint-one&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">version&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;1.0.0&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">description&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;The baremetal example of the NEORV32 RISC-V Processor on Terrasic DE2-115 board&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">package_dir&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">package_dir&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">packages&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;blueprint-one&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">include_package_data&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">True&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">author&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;SoC.One Inc.&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">url&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://xplor.design&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">author_email&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;info@soc.one&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">platforms&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Windows&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Linux&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">long_description&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;The baremetal example of the NEORV32 RISC-V Processor on Terrasic DE2-115 board&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">license&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Free&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">install_requires&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># Some dependencies here&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">classifiers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#39;Hardware&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Ref. &lt;a href="https://setuptools.pypa.io/en/latest/references/keywords.html">https://setuptools.pypa.io/en/latest/references/keywords.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;code>name&lt;/code> - A string specifying the name of the package.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>version&lt;/code>- A string specifying the version number of the package.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>description&lt;/code> - A string describing the package in a single line.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>long_description&lt;/code> - A string providing a longer description of the package.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>author&lt;/code> - A string specifying the author of the package.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>author_email&lt;/code> - A string specifying the email address of the package author.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>URL&lt;/code> - A string specifying the URL for the package homepage.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>license&lt;/code> - A string specifying the license of the package.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>platforms&lt;/code> - A list of strings or comma-separated string. (Used to specify which OS is supported)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>package_dir&lt;/code> - A dictionary that maps package names. (That maps the data folder with the installed blueprint folder)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>packages&lt;/code> - A list of strings specifying the packages that setuptools will manipulate. (That is the name of the installed blueprint folder)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>install_requires&lt;/code> - A string or list of strings specifying what other distributions need to be installed when this one is. (Dependencies concept)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>classifiers&lt;/code> - A list of strings describing the categories for the package. (Classify a blueprint as HW, SW, bitstream,… or something else)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>include_package_data&lt;/code> - If True, setuptools will automatically include any data files it finds inside your package directories that are specified by your MANIFEST.in file. (Should be set to True to include non-Python data)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>For (&lt;code>blueprint-two&lt;/code>), only some code need to be added to &lt;code>setup.py&lt;/code> to specify &lt;code>package_dir&lt;/code> for each supported host OS, as follow:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">from&lt;/span> &lt;span style="color:#000">setuptools&lt;/span> &lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">setup&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">platform&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">platform&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">system&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;Windows&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">package_dir&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;blueprint-two&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;blueprint-two/win32.x86_64&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">else&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">package_dir&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;blueprint-two&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;blueprint-two/linux.x86_64&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="post-install-and-pre-uninstall">Post-install and Pre-uninstall&lt;/h2>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note:&lt;/h4>
&lt;p>If there are executable files that need to run after the blueprint is installed, please add &lt;code>post-install.sh/post-install.bat&lt;/code> file (host specific) to the data folder.&lt;/p>
&lt;p>If there are executable files that need to run before the blueprint is uninstalled, please add &lt;code>pre-uninstall.sh/pre-uninstall.bat&lt;/code> file (host specific) to the data folder.&lt;/p>
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>xplor-studio-elf/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── MANIFEST.in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── setup.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── xplor-studio-elf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── linux.x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ ├── post-install.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ └── pre-uninstall.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── win32.x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── post-install.bat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── pre-uninstall.bat
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="building-blueprint">Building blueprint&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>% python3 setup.py sdist
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or &lt;code>% make build&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>If you&amp;rsquo;re reusing the example template, please rename the data folder and update the content of &lt;code>setup.py&lt;/code>, &lt;code>MANIFEST.in&lt;/code>&lt;/li>
&lt;li>As an example, with &lt;code>blueprint-one&lt;/code>:
&lt;ul>
&lt;li>Rename folder &lt;code>blueprint-one&lt;/code> → &lt;code>socone-blueprint&lt;/code>&lt;/li>
&lt;li>Replace string in &lt;code>setup.py&lt;/code>, &lt;code>MANIFEST.in&lt;/code> : &lt;code>blueprint-one&lt;/code> → &lt;code>socone-blueprint&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="example-of-creating-sample-blueprint">Example of creating Sample Blueprint&lt;/h2>
&lt;p>This is an example of how to create a Blueprint for Baremetal Helloworld sample, running on QEMU simulator.&lt;/p>
&lt;p>Download and extract the Sample Blueprint template from &lt;a href="https://github.com/xplor-studio/xip/blob/blueprint-template/xplor-studio-sample-blueprint-template.zip">here&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Makefile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>xplor-studio-virt-qemu-baremetal-helloworld/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── MANIFEST.in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── setup.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── xplor-studio-virt-qemu-baremetal-helloworld
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ ├── main.c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ └── ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── settings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── .cproject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── .project
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── project.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>Makefile&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>To clean or build the Sample blueprint, use these commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>make clean
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="/blueprints/makefile.png" alt="example image">&lt;/p>
&lt;ul>
&lt;li>&lt;code>MANIFEST.in&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Just need to replace with Blueprint&amp;rsquo;s name&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>global-include xplor-studio-virt-qemu-baremetal-helloworld/**/*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>setup.py&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Update the Sample Blueprint&amp;rsquo;s information like name, description, platforms, dependencies &amp;hellip;&lt;/p>
&lt;p>&lt;img src="/blueprints/setup_py.png" alt="example image">&lt;/p>
&lt;ul>
&lt;li>&lt;code>project.json&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="/blueprints/project_json.png" alt="example image">&lt;/p>
&lt;p>Besides the basic information like Project&amp;rsquo;s Name, Project&amp;rsquo;s Type, Developer need to pay attention to Project&amp;rsquo;s language and Project&amp;rsquo;s category parameters.&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>XPLORSTUDIO IDE supports two kinds of Project&amp;rsquo;s language as C and CPP.&lt;/li>
&lt;li>XPLORSTUDIO IDE supports the following list of Project&amp;rsquo;s categories:
&lt;ul>
&lt;li>Linux: RISC-V Embedded Linux Project&lt;/li>
&lt;li>Baremetal: RISC-V Embedded Project&lt;/li>
&lt;li>FreeRTOS: FreeRTOS Project&lt;/li>
&lt;li>Zephyr: Zephyr Project&lt;/li>
&lt;li>Linux_Kernel: Static Linux Kernel Project&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Developer have to select the correct Project&amp;rsquo;s category from above list.&lt;/p>
&lt;ul>
&lt;li>&lt;code>xplor-studio-virt-qemu-baremetal-helloworld&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Contains all resources of Eclipse&amp;rsquo;s project such as source code files, header files, linker script, libraries &amp;hellip;&lt;/p>
&lt;p>&lt;img src="/blueprints/src_main.png" alt="example image">&lt;/p>
&lt;p>In .cproject, it includes information of Project&amp;rsquo;s settings like managed build options, include paths, library paths &amp;hellip;. Please, check the path of these resources, Developer should use the relative path, not the absolute path.&lt;/p>
&lt;p>For example, to define the linker path:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> &amp;lt;option &lt;span style="color:#000">IS_BUILTIN_EMPTY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#000">IS_VALUE_EMPTY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#000">id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;vio.managedbuild.elf.riscv.option.c.linker.paths.222877999&amp;#34;&lt;/span> &lt;span style="color:#000">superClass&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;vio.managedbuild.elf.riscv.option.c.linker.paths&amp;#34;&lt;/span> &lt;span style="color:#000">valueType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;libPaths&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;listOptionValue &lt;span style="color:#000">builtIn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;amp;quot;&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">XPLOR_HOME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">/blueprints/libraries/libpico/lib/virt/xplor&amp;amp;quot;&amp;#34;&lt;/span>/&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;listOptionValue &lt;span style="color:#000">builtIn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#000">value&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>/&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/option&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong>
To support Windows environment, Developer should use &lt;code>&amp;amp;quot;&lt;/code> before and after the relative path of resource
Naming convention of Example blueprint is &amp;ldquo;xplor-studio-&lt;core>-&lt;platform>-&lt;rtos>-&lt;app>&amp;rdquo;
Starting with prefix as &amp;ldquo;xplor-studio-&amp;rdquo;
core: the name of running core such as Vexrisv, Neorv32, Corevmcu &amp;hellip;
platform: the name of running platform such as Qemu, DE2-115, Stratix10gx &amp;hellip;
rtos: the name of cateogry such as baremetal, linux, freertos &amp;hellip;
app: the name of application such as helloworld, timer, heap &amp;hellip;&lt;/p>
&lt;/blockquote></description></item></channel></rss>